<!DOCTYPE html>


<?php 
      session_start();

      if (!isset($_SESSION['logged_in']) || $_SESSION['logged_in'] == false) {
        header("Location: index.php");
      }
  
      $_SESSION['submitDate'] = " ";

      ?>


<html>
<head>


<link href="style.css" rel="stylesheet" type="text/css">

<title>Network Visualization</title>

</head>


<body id="body">



       <!-- Load font awesome icons -->
<link href="nav.css" rel="stylesheet" type="text/css">

<!-- The navigation menu -->

 <ul>
  <li><a href="home.php">Home</a></li>
  <li><a href="port-form.php">Stacked Bars Graph</a></li>
  <li><a href="cal-form.php">Calendar Heatmap</a></li>
  <li><a href="file-upload.php">Flow File Upload</a></li>
  <li style="float:right"><a class="active" href="logout.php">Log Out</a></li>
</ul> 

      <h1 id="h">Network Security Visualization System</h1>

        

</body>

  <h3>Description</h3>
  <p>Given that we live in the digital era, information is more vulnerable than ever before since more ways to impact its confidentiality, integrity and availability have surfaced due to digitalization. For this reason, Network Security plays a vital role in providing more efficient methods to detect and avoid such threats. However, network administrator use tools that require running through data logs in order to secure the network over potential attacks such as port scanning for reconnaissance purposes. Nonetheless, using visualization would make the process of network monitoring more efficient, effective, and easier to perform. 
<br> <br>
For this reason, as my first research experience, I started working on developing a web-based system that would provide anomaly detection from port scanning threats through visualizations. For this, I created a set of Python scripts that parsed network flow data generated by the High Performance Computing Facility of the University of Puerto Rico in order to create and update json data which is then used by the web-based system to render the visualizations. The visualizations include stacked bar graph of the incoming activity of commonly used ports per hour of a day and a year-long calendar heatmap colored by the amount of incoming activity of each day, both created using JavaScript. Currently, Iâ€™m working on creating more visualizations that would allow for more specific details of any anomaly findings on the incoming port connections. As of now, the preliminary results have been able to show that used in combination, both the calendar heatmap and stacked bar visual, anomalies in the network traffic have been detected. However, further optimization and visuals are to be developed to further improve results. 
</p>

</html>
